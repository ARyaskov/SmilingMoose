#summary One-sentence summary of this page.
=Определение=

Диаграммы – это только представления модели.
Во всех инструментальных средствах UMLмоделирования новые сущности или новые отношения при создании добавляются в модель. Модель – это хранилище всех сущностей и отношений, созданных для
описания требуемого поведения проектируемой программной системы.
Диаграммы – это своего рода картины, или представления модели.
Диаграмма это не модель! На самом деле, различие между диаграммой
и моделью является очень важным для понимания, поскольку сущность или отношение могут быть удалены с диаграммы, или даже со
всех диаграмм, но попрежнему они продолжают существовать в модели. Они будут оставаться в модели до тех пор, пока не будут явно удалены из нее. Общая ошибка новичков в UMLмоделировании состоит
в том, что они удаляют сущности с диаграмм, не удаляя их из модели.

==Описание==

Существует тринадцать различных типов UMLдиаграмм.
Эти диаграммы можно разделить на те, которые моделируют статическую структуру системы (статическую модель), и те, которые моделируют динамическую структуру системы (динамическую модель). Статическая модель фиксирует сущности и структурные отношения между ними; динамическая модель отображает, как сущности взаимодействуют
для генерирования требуемого поведения программной системы. 
Определенного порядка создания UMLдиаграмм не существует, хотя
обычно начинают с диаграммы прецедентов для определения предмет
ной области системы. Как правило, работа идет одновременно над несколькими диаграммами, каждая из которых уточняется по мере выявления более подробной информации о разрабатываемой программной
системе. Таким образом, диаграммы являются как представлением модели, так и основным механизмом введения информации в модель.
В UML 2 представлен новый синтаксис диаграмм. У каждой диаграммы может быть рамка, область заголовка
и область содержимого. Область заголовка – это неправильный пятиугольник, содержащий тип (не обязательно), имя и параметры (не обя
зательно) диаграммы.
<Тип> указывает тип данной диаграммы и должен быть одним из типов, перечисленных на рис. 1.6. Спецификация UML определяет, что
<тип> может быть сокращен, но не предоставляет списка стандартных
сокращений. Явное задание <типа> требуется редко, потому что его
обычно легко определить из визуального синтаксиса.
<Имя> должно описывать семантику диаграммы . <Параметры> предоставляют информацию,
необходимую элементам модели, представленным на диаграмме. При
меры использования <параметров> будут приведены позже.
У диаграммы может быть (не обязательно) условная рамка, ограничивающая область в инструменте моделирования, внутри которой находится диаграмма.